{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./sha256.webworker.js"],"names":["self","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","0","installedWasmModules","wasmImportObjects","2","./wasm_hashing","__wbindgen_throw","p0i32","p1i32","exports","__webpack_require__","module","i","l","call","e","chunkId","promises","push","Promise","resolve","then","importScripts","1","forEach","wasmModuleId","installedWasmModuleData","promise","importObject","req","fetch","p","WebAssembly","compileStreaming","all","items","instantiate","instantiateStreaming","x","arrayBuffer","bytes","res","w","instance","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","s","wasm","Sha2_256Hasher","addEventListener","data","file","fullPath","sha256","fileSize","size","startMilliseconds","performance","now","end","reader","FileReaderSync","start","Math","min","slice","readAsArrayBuffer","update","Uint8Array","postMessage","type","bytesHashed","elapsedMilliseconds","hashResult","hex_digest"],"mappings":"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","file":"webworker.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0: 1\n \t};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t2: function() {\n \t\t\treturn {\n \t\t\t\t\"./wasm_hashing\": {\n \t\t\t\t\t\"__wbindgen_throw\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"__wbindgen_throw\"](p0i32,p1i32);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(\"\" + chunkId + \".webworker.js\");\n \t\t\t}\n \t\t}));\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"1\":[2]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"2\":\"28e7423f674361fb315d\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global self, postMessage, FileReaderSync */\n\nlet wasm_hashing = import(\"./wasm_hashing\");\n\nconst BLOCK_SIZE = 1048576;\n\nwasm_hashing.then(wasm => {\n    let Sha2_256Hasher = wasm.Sha2_256Hasher;\n\n    self.addEventListener(\"message\", ({ data: { file, fullPath } }) => {\n        let sha256 = new Sha2_256Hasher();\n\n        const fileSize = file.size;\n        const startMilliseconds = performance.now();\n\n        for (\n            let reader = new FileReaderSync(), start = 0, end;\n            start < fileSize;\n            start = end\n        ) {\n            end = start + Math.min(BLOCK_SIZE, fileSize - start);\n            let slice = file.slice(start, end);\n            let bytes = reader.readAsArrayBuffer(slice);\n\n            sha256.update(new Uint8Array(bytes));\n\n            postMessage({\n                type: \"PROGRESS_UPDATE\",\n                fullPath,\n                bytesHashed: end,\n                elapsedMilliseconds: performance.now() - startMilliseconds,\n            });\n        }\n\n        let hashResult = sha256.hex_digest();\n\n        // This is a sanity check against\n        if (\n            file.size > 0 &&\n            hashResult ==\n                \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\"\n        ) {\n            throw `Hashed ${file.size} bytes as an empty result!`;\n        }\n\n        postMessage({\n            type: \"RESULT\",\n            fullPath,\n            sha256: hashResult,\n            bytesHashed: fileSize,\n            elapsedMilliseconds: performance.now() - startMilliseconds,\n        });\n    });\n});\n"],"sourceRoot":""}