{"version":3,"sources":["webpack:///./wasm_hashing.js","webpack:///./node_modules/util/util.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/inherits/inherits_browser.js"],"names":["_wasm_hashing_bg__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","cachegetUint8Memory","getUint8Memory","buffer","Uint8Array","passArray8ToWasm","arg","ptr","length","set","cachedDecoder","self","TextDecoder","getStringFromWasm","len","decode","subarray","cachedGlobalArgumentPtr","globalArgumentPtr","cachegetUint32Memory","getUint32Memory","Uint32Array","hash_sha1","arg0","ptr0","len0","retptr","mem","realRet","slice","hash_sha2_256","hash_sha2_512","hash_sha3_256","hash_sha3_512","ConstructorToken","[object Object]","this","Sha2_512Hasher","args","instance","new","__construct","Error","Sha3_256Hasher","Sha2_256Hasher","Sha3_512Hasher","Sha1Hasher","__wbindgen_throw","global","process","formatRegExp","exports","format","f","isString","objects","i","arguments","push","inspect","join","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","apply","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","error","debugEnviron","debugs","obj","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","value","recurseTimes","isFunction","constructor","prototype","ret","primitive","simple","isNumber","formatPrimitive","keys","Object","visibleKeys","array","hash","forEach","val","idx","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","name","isRegExp","RegExp","toString","call","isDate","Date","output","base","braces","isArray","toUTCString","l","hasOwnProperty","formatProperty","key","match","formatArray","map","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","get","split","line","substr","ar","Array","re","objectToString","d","e","o","pad","n","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","timestamp","inherits","origin","add","g","Function","eval","window","module","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","copy","fill","readUInt8","create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor"],"mappings":"giBAAA,IAAAA,EAAAC,EAAA,GAGA,IAAAC,EAAA,KACA,SAAAC,IAIA,OAHA,OAAAD,KAAAE,SAAAJ,EAAA,EAAAI,SACAF,EAAA,IAAAG,WAAAL,EAAA,EAAAI,SAEAF,EAGA,SAAAI,EAAAC,GACA,MAAAC,EAAAR,EAAA,IAAAO,EAAAE,QAEA,OADAN,IAAAO,IAAAH,EAAAC,EAAA,IACAA,EAAAD,EAAAE,QAOA,IAAAE,EAAA,IAJA,iBAAAC,WAAAC,YACAD,KAAAC,YACAZ,EAAA,GAAAY,aAEA,SAEA,SAAAC,EAAAN,EAAAO,GACA,OAAAJ,EAAAK,OAAAb,IAAAc,SAAAT,IAAAO,IAGA,IAAAG,EAAA,KACA,SAAAC,IAIA,OAHA,OAAAD,IACAA,EAAAlB,EAAA,KAEAkB,EAGA,IAAAE,EAAA,KACA,SAAAC,IAIA,OAHA,OAAAD,KAAAhB,SAAAJ,EAAA,EAAAI,SACAgB,EAAA,IAAAE,YAAAtB,EAAA,EAAAI,SAEAgB,EAMA,SAAAG,EAAAC,GACA,MAAAC,EAAAC,GAAApB,EAAAkB,GACAG,EAAAR,IACA,IACAnB,EAAA,EAAA2B,EAAAF,EAAAC,GACA,MAAAE,EAAAP,IACAb,EAAAoB,EAAAD,EAAA,GACAZ,EAAAa,EAAAD,EAAA,KAEAE,EAAAf,EAAAN,EAAAO,GAAAe,QAEA,OADA9B,EAAA,EAAAQ,EAAA,EAAAO,GACAc,EAGK,QACL7B,EAAA,EAAAyB,EAAA,EAAAC,IAUA,SAAAK,EAAAP,GACA,MAAAC,EAAAC,GAAApB,EAAAkB,GACAG,EAAAR,IACA,IACAnB,EAAA,EAAA2B,EAAAF,EAAAC,GACA,MAAAE,EAAAP,IACAb,EAAAoB,EAAAD,EAAA,GACAZ,EAAAa,EAAAD,EAAA,KAEAE,EAAAf,EAAAN,EAAAO,GAAAe,QAEA,OADA9B,EAAA,EAAAQ,EAAA,EAAAO,GACAc,EAGK,QACL7B,EAAA,EAAAyB,EAAA,EAAAC,IAUA,SAAAM,EAAAR,GACA,MAAAC,EAAAC,GAAApB,EAAAkB,GACAG,EAAAR,IACA,IACAnB,EAAA,EAAA2B,EAAAF,EAAAC,GACA,MAAAE,EAAAP,IACAb,EAAAoB,EAAAD,EAAA,GACAZ,EAAAa,EAAAD,EAAA,KAEAE,EAAAf,EAAAN,EAAAO,GAAAe,QAEA,OADA9B,EAAA,EAAAQ,EAAA,EAAAO,GACAc,EAGK,QACL7B,EAAA,EAAAyB,EAAA,EAAAC,IAUA,SAAAO,EAAAT,GACA,MAAAC,EAAAC,GAAApB,EAAAkB,GACAG,EAAAR,IACA,IACAnB,EAAA,EAAA2B,EAAAF,EAAAC,GACA,MAAAE,EAAAP,IACAb,EAAAoB,EAAAD,EAAA,GACAZ,EAAAa,EAAAD,EAAA,KAEAE,EAAAf,EAAAN,EAAAO,GAAAe,QAEA,OADA9B,EAAA,EAAAQ,EAAA,EAAAO,GACAc,EAGK,QACL7B,EAAA,EAAAyB,EAAA,EAAAC,IAUA,SAAAQ,EAAAV,GACA,MAAAC,EAAAC,GAAApB,EAAAkB,GACAG,EAAAR,IACA,IACAnB,EAAA,EAAA2B,EAAAF,EAAAC,GACA,MAAAE,EAAAP,IACAb,EAAAoB,EAAAD,EAAA,GACAZ,EAAAa,EAAAD,EAAA,KAEAE,EAAAf,EAAAN,EAAAO,GAAAe,QAEA,OADA9B,EAAA,EAAAQ,EAAA,EAAAO,GACAc,EAGK,QACL7B,EAAA,EAAAyB,EAAA,EAAAC,UAMAS,EACAC,YAAA5B,GACA6B,KAAA7B,aAKA8B,EAEAF,mBAAA5B,GACA,WAAA8B,EAAA,IAAAH,EAAA3B,IAGA4B,eAAAG,GACA,OAAAA,EAAA9B,QAAA8B,EAAA,aAAAJ,EAEA,YADAE,KAAA7B,IAAA+B,EAAA,GAAA/B,KAKA,IAAAgC,EAAAF,EAAAG,OAAAF,GACAF,KAAA7B,IAAAgC,EAAAhC,IAEA4B,OACA,MAAA5B,EAAA6B,KAAA7B,IACA6B,KAAA7B,IAAA,EACAR,EAAA,EAAAQ,GAKA4B,aACA,OAAAE,EAAAI,YAAA1C,EAAA,KAMAoC,OAAAZ,GACA,OAAAa,KAAA7B,IACA,UAAAmC,MAAA,gCAEA,MAAAlB,EAAAC,GAAApB,EAAAkB,GACA,IACA,OAAAxB,EAAA,EAAAqC,KAAA7B,IAAAiB,EAAAC,GAES,QACT1B,EAAA,EAAAyB,EAAA,EAAAC,IAQAU,aACA,OAAAC,KAAA7B,IACA,UAAAmC,MAAA,gCAEA,MAAAhB,EAAAR,IACAnB,EAAA,EAAA2B,EAAAU,KAAA7B,KACA,MAAAoB,EAAAP,IACAb,EAAAoB,EAAAD,EAAA,GACAZ,EAAAa,EAAAD,EAAA,KAEAE,EAAAf,EAAAN,EAAAO,GAAAe,QAEA,OADA9B,EAAA,EAAAQ,EAAA,EAAAO,GACAc,SAMAe,EAEAR,mBAAA5B,GACA,WAAAoC,EAAA,IAAAT,EAAA3B,IAGA4B,eAAAG,GACA,OAAAA,EAAA9B,QAAA8B,EAAA,aAAAJ,EAEA,YADAE,KAAA7B,IAAA+B,EAAA,GAAA/B,KAKA,IAAAgC,EAAAI,EAAAH,OAAAF,GACAF,KAAA7B,IAAAgC,EAAAhC,IAEA4B,OACA,MAAA5B,EAAA6B,KAAA7B,IACA6B,KAAA7B,IAAA,EACAR,EAAA,EAAAQ,GAKA4B,aACA,OAAAQ,EAAAF,YAAA1C,EAAA,KAMAoC,OAAAZ,GACA,OAAAa,KAAA7B,IACA,UAAAmC,MAAA,gCAEA,MAAAlB,EAAAC,GAAApB,EAAAkB,GACA,IACA,OAAAxB,EAAA,EAAAqC,KAAA7B,IAAAiB,EAAAC,GAES,QACT1B,EAAA,EAAAyB,EAAA,EAAAC,IAQAU,aACA,OAAAC,KAAA7B,IACA,UAAAmC,MAAA,gCAEA,MAAAhB,EAAAR,IACAnB,EAAA,EAAA2B,EAAAU,KAAA7B,KACA,MAAAoB,EAAAP,IACAb,EAAAoB,EAAAD,EAAA,GACAZ,EAAAa,EAAAD,EAAA,KAEAE,EAAAf,EAAAN,EAAAO,GAAAe,QAEA,OADA9B,EAAA,EAAAQ,EAAA,EAAAO,GACAc,SAMAgB,EAEAT,mBAAA5B,GACA,WAAAqC,EAAA,IAAAV,EAAA3B,IAGA4B,eAAAG,GACA,OAAAA,EAAA9B,QAAA8B,EAAA,aAAAJ,EAEA,YADAE,KAAA7B,IAAA+B,EAAA,GAAA/B,KAKA,IAAAgC,EAAAK,EAAAJ,OAAAF,GACAF,KAAA7B,IAAAgC,EAAAhC,IAEA4B,OACA,MAAA5B,EAAA6B,KAAA7B,IACA6B,KAAA7B,IAAA,EACAR,EAAA,EAAAQ,GAKA4B,aACA,OAAAS,EAAAH,YAAA1C,EAAA,KAMAoC,OAAAZ,GACA,OAAAa,KAAA7B,IACA,UAAAmC,MAAA,gCAEA,MAAAlB,EAAAC,GAAApB,EAAAkB,GACA,IACA,OAAAxB,EAAA,EAAAqC,KAAA7B,IAAAiB,EAAAC,GAES,QACT1B,EAAA,EAAAyB,EAAA,EAAAC,IAQAU,aACA,OAAAC,KAAA7B,IACA,UAAAmC,MAAA,gCAEA,MAAAhB,EAAAR,IACAnB,EAAA,EAAA2B,EAAAU,KAAA7B,KACA,MAAAoB,EAAAP,IACAb,EAAAoB,EAAAD,EAAA,GACAZ,EAAAa,EAAAD,EAAA,KAEAE,EAAAf,EAAAN,EAAAO,GAAAe,QAEA,OADA9B,EAAA,EAAAQ,EAAA,EAAAO,GACAc,SAMAiB,EAEAV,mBAAA5B,GACA,WAAAsC,EAAA,IAAAX,EAAA3B,IAGA4B,eAAAG,GACA,OAAAA,EAAA9B,QAAA8B,EAAA,aAAAJ,EAEA,YADAE,KAAA7B,IAAA+B,EAAA,GAAA/B,KAKA,IAAAgC,EAAAM,EAAAL,OAAAF,GACAF,KAAA7B,IAAAgC,EAAAhC,IAEA4B,OACA,MAAA5B,EAAA6B,KAAA7B,IACA6B,KAAA7B,IAAA,EACAR,EAAA,EAAAQ,GAKA4B,aACA,OAAAU,EAAAJ,YAAA1C,EAAA,KAMAoC,OAAAZ,GACA,OAAAa,KAAA7B,IACA,UAAAmC,MAAA,gCAEA,MAAAlB,EAAAC,GAAApB,EAAAkB,GACA,IACA,OAAAxB,EAAA,EAAAqC,KAAA7B,IAAAiB,EAAAC,GAES,QACT1B,EAAA,EAAAyB,EAAA,EAAAC,IAQAU,aACA,OAAAC,KAAA7B,IACA,UAAAmC,MAAA,gCAEA,MAAAhB,EAAAR,IACAnB,EAAA,EAAA2B,EAAAU,KAAA7B,KACA,MAAAoB,EAAAP,IACAb,EAAAoB,EAAAD,EAAA,GACAZ,EAAAa,EAAAD,EAAA,KAEAE,EAAAf,EAAAN,EAAAO,GAAAe,QAEA,OADA9B,EAAA,EAAAQ,EAAA,EAAAO,GACAc,SAMAkB,EAEAX,mBAAA5B,GACA,WAAAuC,EAAA,IAAAZ,EAAA3B,IAGA4B,eAAAG,GACA,OAAAA,EAAA9B,QAAA8B,EAAA,aAAAJ,EAEA,YADAE,KAAA7B,IAAA+B,EAAA,GAAA/B,KAKA,IAAAgC,EAAAO,EAAAN,OAAAF,GACAF,KAAA7B,IAAAgC,EAAAhC,IAEA4B,OACA,MAAA5B,EAAA6B,KAAA7B,IACA6B,KAAA7B,IAAA,EACAR,EAAA,EAAAQ,GAKA4B,aACA,OAAAW,EAAAL,YAAA1C,EAAA,KAMAoC,OAAAZ,GACA,OAAAa,KAAA7B,IACA,UAAAmC,MAAA,gCAEA,MAAAlB,EAAAC,GAAApB,EAAAkB,GACA,IACA,OAAAxB,EAAA,EAAAqC,KAAA7B,IAAAiB,EAAAC,GAES,QACT1B,EAAA,EAAAyB,EAAA,EAAAC,IAQAU,aACA,OAAAC,KAAA7B,IACA,UAAAmC,MAAA,gCAEA,MAAAhB,EAAAR,IACAnB,EAAA,EAAA2B,EAAAU,KAAA7B,KACA,MAAAoB,EAAAP,IACAb,EAAAoB,EAAAD,EAAA,GACAZ,EAAAa,EAAAD,EAAA,KAEAE,EAAAf,EAAAN,EAAAO,GAAAe,QAEA,OADA9B,EAAA,EAAAQ,EAAA,EAAAO,GACAc,GAKA,SAAAmB,EAAAxC,EAAAO,GACA,UAAA4B,MAAA7B,EAAAN,EAAAO,2FCxfA,SAAAkC,EAAAC,GAqBA,IAAAC,EAAA,WACAC,EAAAC,OAAA,SAAAC,GACA,IAAAC,EAAAD,GAAA,CAEA,IADA,IAAAE,KACAC,EAAA,EAAmBA,EAAAC,UAAAjD,OAAsBgD,IACzCD,EAAAG,KAAAC,EAAAF,UAAAD,KAEA,OAAAD,EAAAK,KAAA,KAGAJ,EAAA,EAmBA,IAnBA,IACAlB,EAAAmB,UACA3C,EAAAwB,EAAA9B,OACAqD,EAAAC,OAAAT,GAAAU,QAAAb,EAAA,SAAAc,GACA,UAAAA,EAAA,UACA,GAAAR,GAAA1C,EAAA,OAAAkD,EACA,OAAAA,GACA,gBAAAF,OAAAxB,EAAAkB,MACA,gBAAAS,OAAA3B,EAAAkB,MACA,SACA,IACA,OAAAU,KAAAC,UAAA7B,EAAAkB,MACS,MAAAY,GACT,mBAEA,QACA,OAAAJ,KAGAA,EAAA1B,EAAAkB,GAAuBA,EAAA1C,EAASkD,EAAA1B,IAAAkB,GAChCa,EAAAL,KAAAM,EAAAN,GACAH,GAAA,IAAAG,EAEAH,GAAA,IAAAF,EAAAK,GAGA,OAAAH,GAOAV,EAAAoB,UAAA,SAAAC,EAAAC,GAEA,GAAAC,EAAA1B,EAAAC,SACA,kBACA,OAAAE,EAAAoB,UAAAC,EAAAC,GAAAE,MAAAvC,KAAAqB,YAIA,QAAAR,EAAA2B,cACA,OAAAJ,EAGA,IAAAK,GAAA,EAeA,OAdA,WACA,IAAAA,EAAA,CACA,GAAA5B,EAAA6B,iBACA,UAAApC,MAAA+B,GACOxB,EAAA8B,iBACPC,QAAAC,MAAAR,GAEAO,QAAAE,MAAAT,GAEAI,GAAA,EAEA,OAAAL,EAAAG,MAAAvC,KAAAqB,aAOA,IACA0B,EADAC,KA6BA,SAAAzB,EAAA0B,EAAAC,GAEA,IAAAC,GACAC,QACAC,QAAAC,GAkBA,OAfAjC,UAAAjD,QAAA,IAAA+E,EAAAI,MAAAlC,UAAA,IACAA,UAAAjD,QAAA,IAAA+E,EAAAK,OAAAnC,UAAA,IACAoC,EAAAP,GAEAC,EAAAO,WAAAR,EACGA,GAEHnC,EAAA4C,QAAAR,EAAAD,GAGAZ,EAAAa,EAAAO,cAAAP,EAAAO,YAAA,GACApB,EAAAa,EAAAI,SAAAJ,EAAAI,MAAA,GACAjB,EAAAa,EAAAK,UAAAL,EAAAK,QAAA,GACAlB,EAAAa,EAAAS,iBAAAT,EAAAS,eAAA,GACAT,EAAAK,SAAAL,EAAAE,QAAAQ,GACAC,EAAAX,EAAAF,EAAAE,EAAAI,OAoCA,SAAAM,EAAApC,EAAAsC,GACA,IAAAC,EAAAzC,EAAA0C,OAAAF,GAEA,OAAAC,EACA,KAAAzC,EAAAiC,OAAAQ,GAAA,OAAAvC,EACA,KAAAF,EAAAiC,OAAAQ,GAAA,OAEAvC,EAKA,SAAA6B,EAAA7B,EAAAsC,GACA,OAAAtC,EAeA,SAAAqC,EAAAX,EAAAe,EAAAC,GAGA,GAAAhB,EAAAS,eACAM,GACAE,EAAAF,EAAA3C,UAEA2C,EAAA3C,UAAAR,EAAAQ,WAEA2C,EAAAG,aAAAH,EAAAG,YAAAC,YAAAJ,GAAA,CACA,IAAAK,EAAAL,EAAA3C,QAAA4C,EAAAhB,GAIA,OAHAjC,EAAAqD,KACAA,EAAAT,EAAAX,EAAAoB,EAAAJ,IAEAI,EAIA,IAAAC,EA+FA,SAAArB,EAAAe,GACA,GAAA5B,EAAA4B,GACA,OAAAf,EAAAE,QAAA,yBACA,GAAAnC,EAAAgD,GAAA,CACA,IAAAO,EAAA,IAAA3C,KAAAC,UAAAmC,GAAAvC,QAAA,aACAA,QAAA,YACAA,QAAA,gBACA,OAAAwB,EAAAE,QAAAoB,EAAA,UAEA,GAAAC,EAAAR,GACA,OAAAf,EAAAE,QAAA,GAAAa,EAAA,UACA,GAAAT,EAAAS,GACA,OAAAf,EAAAE,QAAA,GAAAa,EAAA,WAEA,GAAAjC,EAAAiC,GACA,OAAAf,EAAAE,QAAA,eA9GAsB,CAAAxB,EAAAe,GACA,GAAAM,EACA,OAAAA,EAIA,IAAAI,EAAAC,OAAAD,KAAAV,GACAY,EApCA,SAAAC,GACA,IAAAC,KAMA,OAJAD,EAAAE,QAAA,SAAAC,EAAAC,GACAH,EAAAE,IAAA,IAGAF,EA6BAI,CAAAR,GAQA,GANAzB,EAAAO,aACAkB,EAAAC,OAAAQ,oBAAAnB,IAKAoB,EAAApB,KACAU,EAAAW,QAAA,eAAAX,EAAAW,QAAA,mBACA,OAAAC,EAAAtB,GAIA,OAAAU,EAAAxG,OAAA,CACA,GAAAgG,EAAAF,GAAA,CACA,IAAAuB,EAAAvB,EAAAuB,KAAA,KAAAvB,EAAAuB,KAAA,GACA,OAAAtC,EAAAE,QAAA,YAAAoC,EAAA,eAEA,GAAAC,EAAAxB,GACA,OAAAf,EAAAE,QAAAsC,OAAArB,UAAAsB,SAAAC,KAAA3B,GAAA,UAEA,GAAA4B,EAAA5B,GACA,OAAAf,EAAAE,QAAA0C,KAAAzB,UAAAsB,SAAAC,KAAA3B,GAAA,QAEA,GAAAoB,EAAApB,GACA,OAAAsB,EAAAtB,GAIA,IA2CA8B,EA3CAC,EAAA,GAAAlB,GAAA,EAAAmB,GAAA,IAA4C,MAG5CC,EAAAjC,KACAa,GAAA,EACAmB,GAAA,UAIA9B,EAAAF,MAEA+B,EAAA,cADA/B,EAAAuB,KAAA,KAAAvB,EAAAuB,KAAA,IACA,KAkBA,OAdAC,EAAAxB,KACA+B,EAAA,IAAAN,OAAArB,UAAAsB,SAAAC,KAAA3B,IAIA4B,EAAA5B,KACA+B,EAAA,IAAAF,KAAAzB,UAAA8B,YAAAP,KAAA3B,IAIAoB,EAAApB,KACA+B,EAAA,IAAAT,EAAAtB,IAGA,IAAAU,EAAAxG,QAAA2G,GAAA,GAAAb,EAAA9F,OAIA+F,EAAA,EACAuB,EAAAxB,GACAf,EAAAE,QAAAsC,OAAArB,UAAAsB,SAAAC,KAAA3B,GAAA,UAEAf,EAAAE,QAAA,uBAIAF,EAAAC,KAAA9B,KAAA4C,GAIA8B,EADAjB,EAsCA,SAAA5B,EAAAe,EAAAC,EAAAW,EAAAF,GAEA,IADA,IAAAoB,KACA5E,EAAA,EAAAiF,EAAAnC,EAAA9F,OAAmCgD,EAAAiF,IAAOjF,EAC1CkF,EAAApC,EAAAxC,OAAAN,IACA4E,EAAA1E,KAAAiF,EAAApD,EAAAe,EAAAC,EAAAW,EACApD,OAAAN,IAAA,IAEA4E,EAAA1E,KAAA,IASA,OANAsD,EAAAK,QAAA,SAAAuB,GACAA,EAAAC,MAAA,UACAT,EAAA1E,KAAAiF,EAAApD,EAAAe,EAAAC,EAAAW,EACA0B,GAAA,MAGAR,EArDAU,CAAAvD,EAAAe,EAAAC,EAAAW,EAAAF,GAEAA,EAAA+B,IAAA,SAAAH,GACA,OAAAD,EAAApD,EAAAe,EAAAC,EAAAW,EAAA0B,EAAAzB,KAIA5B,EAAAC,KAAAwD,MA6GA,SAAAZ,EAAAC,EAAAC,GAQA,GANAF,EAAAa,OAAA,SAAAC,EAAAC,GAGA,OAFAC,EACAD,EAAAxB,QAAA,UAAAyB,EACAF,EAAAC,EAAApF,QAAA,sBAAAvD,OAAA,GACG,GAEH,GACA,OAAA8H,EAAA,IACA,KAAAD,EAAA,GAAAA,EAAA,OACA,IACAD,EAAAxE,KAAA,SACA,IACA0E,EAAA,GAGA,OAAAA,EAAA,GAAAD,EAAA,IAAAD,EAAAxE,KAAA,UAAA0E,EAAA,GA5HAe,CAAAjB,EAAAC,EAAAC,IAxBAA,EAAA,GAAAD,EAAAC,EAAA,GA+CA,SAAAV,EAAAtB,GACA,UAAA5D,MAAAgE,UAAAsB,SAAAC,KAAA3B,GAAA,IAwBA,SAAAqC,EAAApD,EAAAe,EAAAC,EAAAW,EAAA0B,EAAAzB,GACA,IAAAU,EAAAhE,EAAAyF,EAsCA,IArCAA,EAAArC,OAAAsC,yBAAAjD,EAAAsC,KAAyDtC,QAAAsC,KACzDY,IAEA3F,EADAyF,EAAA7I,IACA8E,EAAAE,QAAA,6BAEAF,EAAAE,QAAA,sBAGA6D,EAAA7I,MACAoD,EAAA0B,EAAAE,QAAA,uBAGAiD,EAAAxB,EAAA0B,KACAf,EAAA,IAAAe,EAAA,KAEA/E,IACA0B,EAAAC,KAAAmC,QAAA2B,EAAAhD,OAAA,GAEAzC,EADAQ,EAAAkC,GACAL,EAAAX,EAAA+D,EAAAhD,MAAA,MAEAJ,EAAAX,EAAA+D,EAAAhD,MAAAC,EAAA,IAEAoB,QAAA,WAEA9D,EADAsD,EACAtD,EAAA4F,MAAA,MAAAV,IAAA,SAAAW,GACA,WAAAA,IACW9F,KAAA,MAAA+F,OAAA,GAEX,KAAA9F,EAAA4F,MAAA,MAAAV,IAAA,SAAAW,GACA,YAAAA,IACW9F,KAAA,OAIXC,EAAA0B,EAAAE,QAAA,yBAGAf,EAAAmD,GAAA,CACA,GAAAV,GAAAyB,EAAAC,MAAA,SACA,OAAAhF,GAEAgE,EAAA3D,KAAAC,UAAA,GAAAyE,IACAC,MAAA,iCACAhB,IAAA8B,OAAA,EAAA9B,EAAArH,OAAA,GACAqH,EAAAtC,EAAAE,QAAAoC,EAAA,UAEAA,IAAA9D,QAAA,YACAA,QAAA,YACAA,QAAA,gBACA8D,EAAAtC,EAAAE,QAAAoC,EAAA,WAIA,OAAAA,EAAA,KAAAhE,EA2BA,SAAA0E,EAAAqB,GACA,OAAAC,MAAAtB,QAAAqB,GAIA,SAAA/D,EAAAvF,GACA,wBAAAA,EAIA,SAAA+D,EAAA/D,GACA,cAAAA,EASA,SAAAwG,EAAAxG,GACA,uBAAAA,EAIA,SAAAgD,EAAAhD,GACA,uBAAAA,EASA,SAAAoE,EAAApE,GACA,gBAAAA,EAIA,SAAAwH,EAAAgC,GACA,OAAAxF,EAAAwF,IAAA,oBAAAC,EAAAD,GAIA,SAAAxF,EAAAhE,GACA,uBAAAA,GAAA,OAAAA,EAIA,SAAA4H,EAAA8B,GACA,OAAA1F,EAAA0F,IAAA,kBAAAD,EAAAC,GAIA,SAAAtC,EAAAuC,GACA,OAAA3F,EAAA2F,KACA,mBAAAF,EAAAE,iBAAAvH,OAIA,SAAA8D,EAAAlG,GACA,yBAAAA,EAgBA,SAAAyJ,EAAAG,GACA,OAAAjD,OAAAP,UAAAsB,SAAAC,KAAAiC,GAIA,SAAAC,EAAAC,GACA,OAAAA,EAAA,OAAAA,EAAApC,SAAA,IAAAoC,EAAApC,SAAA,IApbA7E,EAAAkH,SAAA,SAAA5J,GAIA,GAHAiE,EAAAS,KACAA,EAAAlC,EAAAqH,IAAAC,YAAA,IACA9J,IAAA+J,eACApF,EAAA3E,GACA,OAAAsH,OAAA,MAAAtH,EAAA,WAAAgK,KAAAtF,GAAA,CACA,IAAAuF,EAAAzH,EAAAyH,IACAtF,EAAA3E,GAAA,WACA,IAAAgE,EAAAtB,EAAAC,OAAAuB,MAAAxB,EAAAM,WACAuB,QAAAE,MAAA,YAAAzE,EAAAiK,EAAAjG,SAGAW,EAAA3E,GAAA,aAGA,OAAA2E,EAAA3E,IAoCA0C,EAAAQ,UAIAA,EAAAiC,QACA+E,MAAA,MACAC,QAAA,MACAC,WAAA,MACAC,SAAA,MACAC,OAAA,OACAC,MAAA,OACAC,OAAA,OACAC,MAAA,OACAC,MAAA,OACAC,OAAA,OACAC,SAAA,OACAC,KAAA,OACAC,QAAA,QAIA5H,EAAA0C,QACAmF,QAAA,OACAC,OAAA,SACAC,QAAA,SACAC,UAAA,OACAC,KAAA,OACAC,OAAA,QACAC,KAAA,UAEAC,OAAA,OAkRA5I,EAAAoF,UAKApF,EAAA0C,YAKA1C,EAAAkB,SAKAlB,EAAA6I,kBAHA,SAAA1L,GACA,aAAAA,GAOA6C,EAAA2D,WAKA3D,EAAAG,WAKAH,EAAA8I,SAHA,SAAA3L,GACA,uBAAAA,GAOA6C,EAAAuB,cAKAvB,EAAA2E,WAKA3E,EAAAmB,WAKAnB,EAAA+E,SAMA/E,EAAAuE,UAKAvE,EAAAqD,aAUArD,EAAA+I,YARA,SAAA5L,GACA,cAAAA,GACA,kBAAAA,GACA,iBAAAA,GACA,iBAAAA,GACA,iBAAAA,QACA,IAAAA,GAIA6C,EAAAgJ,SAAAnM,EAAA,GAYA,IAAAoM,GAAA,sDACA,mBA6CA,SAAA1D,EAAArD,EAAAgH,GACA,OAAApF,OAAAP,UAAAgC,eAAAT,KAAA5C,EAAAgH,GAjCAlJ,EAAAmJ,IAAA,WACAtH,QAAAsH,IAAA,UAXA,WACA,IAAAtC,EAAA,IAAA7B,KACAoE,GAAApC,EAAAH,EAAAwC,YACArC,EAAAH,EAAAyC,cACAtC,EAAAH,EAAA0C,eAAA9I,KAAA,KACA,OAAAoG,EAAA2C,UAAAP,EAAApC,EAAA4C,YAAAL,GAAA3I,KAAA,KAMAiJ,GAAA1J,EAAAC,OAAAuB,MAAAxB,EAAAM,aAiBAN,EAAA2J,SAAA9M,EAAA,GAEAmD,EAAA4C,QAAA,SAAAgH,EAAAC,GAEA,IAAAA,IAAA1I,EAAA0I,GAAA,OAAAD,EAIA,IAFA,IAAA/F,EAAAC,OAAAD,KAAAgG,GACAxJ,EAAAwD,EAAAxG,OACAgD,KACAuJ,EAAA/F,EAAAxD,IAAAwJ,EAAAhG,EAAAxD,IAEA,OAAAuJ,yCCpkBA,IAAAE,EAGAA,EAAA,WACA,OAAA7K,KADA,GAIA,IAEA6K,KAAAC,SAAA,cAAAA,KAAA,EAAAC,MAAA,QACC,MAAAlD,GAED,iBAAAmD,SAAAH,EAAAG,QAOAC,EAAAlK,QAAA8J,iBClBA,IAOAK,EACAC,EARAtK,EAAAoK,EAAAlK,WAUA,SAAAqK,IACA,UAAA9K,MAAA,mCAEA,SAAA+K,IACA,UAAA/K,MAAA,qCAsBA,SAAAgL,EAAAC,GACA,GAAAL,IAAAM,WAEA,OAAAA,WAAAD,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAM,WAEA,OADAN,EAAAM,WACAA,WAAAD,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,GACK,MAAA1D,GACL,IAEA,OAAAqD,EAAArF,KAAA,KAAA0F,EAAA,GACS,MAAA1D,GAET,OAAAqD,EAAArF,KAAA7F,KAAAuL,EAAA,MAvCA,WACA,IAEAL,EADA,mBAAAM,WACAA,WAEAJ,EAEK,MAAAvD,GACLqD,EAAAE,EAEA,IAEAD,EADA,mBAAAM,aACAA,aAEAJ,EAEK,MAAAxD,GACLsD,EAAAE,GAjBA,GAwEA,IAEAK,EAFAC,KACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAAtN,OACAuN,EAAAD,EAAAK,OAAAJ,GAEAE,GAAA,EAEAF,EAAAvN,QACA4N,KAIA,SAAAA,IACA,IAAAJ,EAAA,CAGA,IAAAK,EAAAX,EAAAQ,GACAF,GAAA,EAGA,IADA,IAAAlN,EAAAiN,EAAAvN,OACAM,GAAA,CAGA,IAFAgN,EAAAC,EACAA,OACAE,EAAAnN,GACAgN,GACAA,EAAAG,GAAAK,MAGAL,GAAA,EACAnN,EAAAiN,EAAAvN,OAEAsN,EAAA,KACAE,GAAA,EAnEA,SAAAO,GACA,GAAAhB,IAAAM,aAEA,OAAAA,aAAAU,GAGA,IAAAhB,IAAAE,IAAAF,IAAAM,aAEA,OADAN,EAAAM,aACAA,aAAAU,GAEA,IAEAhB,EAAAgB,GACK,MAAAtE,GACL,IAEA,OAAAsD,EAAAtF,KAAA,KAAAsG,GACS,MAAAtE,GAGT,OAAAsD,EAAAtF,KAAA7F,KAAAmM,KAgDAC,CAAAH,IAiBA,SAAAI,EAAAd,EAAAxG,GACA/E,KAAAuL,MACAvL,KAAA+E,QAYA,SAAAuH,KA5BAzL,EAAA0L,SAAA,SAAAhB,GACA,IAAArL,EAAA,IAAAuH,MAAApG,UAAAjD,OAAA,GACA,GAAAiD,UAAAjD,OAAA,EACA,QAAAgD,EAAA,EAAuBA,EAAAC,UAAAjD,OAAsBgD,IAC7ClB,EAAAkB,EAAA,GAAAC,UAAAD,GAGAuK,EAAArK,KAAA,IAAA+K,EAAAd,EAAArL,IACA,IAAAyL,EAAAvN,QAAAwN,GACAN,EAAAU,IASAK,EAAA/H,UAAA4H,IAAA,WACAlM,KAAAuL,IAAAhJ,MAAA,KAAAvC,KAAA+E,QAEAlE,EAAA2L,MAAA,UACA3L,EAAA4L,SAAA,EACA5L,EAAAqH,OACArH,EAAA6L,QACA7L,EAAA8L,QAAA,GACA9L,EAAA+L,YAIA/L,EAAAgM,GAAAP,EACAzL,EAAAiM,YAAAR,EACAzL,EAAAkM,KAAAT,EACAzL,EAAAmM,IAAAV,EACAzL,EAAAoM,eAAAX,EACAzL,EAAAqM,mBAAAZ,EACAzL,EAAAsM,KAAAb,EACAzL,EAAAuM,gBAAAd,EACAzL,EAAAwM,oBAAAf,EAEAzL,EAAAyM,UAAA,SAAA7H,GAAqC,UAErC5E,EAAA0M,QAAA,SAAA9H,GACA,UAAAnF,MAAA,qCAGAO,EAAA2M,IAAA,WAA2B,WAC3B3M,EAAA4M,MAAA,SAAAC,GACA,UAAApN,MAAA,mCAEAO,EAAA8M,MAAA,WAA4B,yBCvL5B1C,EAAAlK,QAAA,SAAA7C,GACA,OAAAA,GAAA,iBAAAA,GACA,mBAAAA,EAAA0P,MACA,mBAAA1P,EAAA2P,MACA,mBAAA3P,EAAA4P,0BCJA,mBAAAjJ,OAAAkJ,OAEA9C,EAAAlK,QAAA,SAAAiN,EAAAC,GACAD,EAAAE,OAAAD,EACAD,EAAA1J,UAAAO,OAAAkJ,OAAAE,EAAA3J,WACAD,aACAH,MAAA8J,EACAG,YAAA,EACAC,UAAA,EACAC,cAAA,MAMApD,EAAAlK,QAAA,SAAAiN,EAAAC,GACAD,EAAAE,OAAAD,EACA,IAAAK,EAAA,aACAA,EAAAhK,UAAA2J,EAAA3J,UACA0J,EAAA1J,UAAA,IAAAgK,EACAN,EAAA1J,UAAAD,YAAA2J","file":"1.webworker.js","sourcesContent":["/* tslint:disable */\nimport * as wasm from './wasm_hashing_bg';\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction passArray8ToWasm(arg) {\n    const ptr = wasm.__wbindgen_malloc(arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    return [ptr, arg.length];\n}\n\nconst TextDecoder = typeof self === 'object' && self.TextDecoder\n    ? self.TextDecoder\n    : require('util').TextDecoder;\n\nlet cachedDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n    }\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n/**\n* @param {Uint8Array} arg0\n* @returns {string}\n*/\nexport function hash_sha1(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.hash_sha1(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        \n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n        \n        \n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n        \n    }\n    \n}\n\n/**\n* @param {Uint8Array} arg0\n* @returns {string}\n*/\nexport function hash_sha2_256(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.hash_sha2_256(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        \n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n        \n        \n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n        \n    }\n    \n}\n\n/**\n* @param {Uint8Array} arg0\n* @returns {string}\n*/\nexport function hash_sha2_512(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.hash_sha2_512(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        \n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n        \n        \n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n        \n    }\n    \n}\n\n/**\n* @param {Uint8Array} arg0\n* @returns {string}\n*/\nexport function hash_sha3_256(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.hash_sha3_256(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        \n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n        \n        \n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n        \n    }\n    \n}\n\n/**\n* @param {Uint8Array} arg0\n* @returns {string}\n*/\nexport function hash_sha3_512(arg0) {\n    const [ptr0, len0] = passArray8ToWasm(arg0);\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.hash_sha3_512(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        \n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n        \n        \n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n        \n    }\n    \n}\n\nclass ConstructorToken {\n    constructor(ptr) {\n        this.ptr = ptr;\n    }\n}\n/**\n*/\nexport class Sha2_512Hasher {\n    \n    static __construct(ptr) {\n        return new Sha2_512Hasher(new ConstructorToken(ptr));\n    }\n    \n    constructor(...args) {\n        if (args.length === 1 && args[0] instanceof ConstructorToken) {\n            this.ptr = args[0].ptr;\n            return;\n        }\n        \n        // This invocation of new will call this constructor with a ConstructorToken\n        let instance = Sha2_512Hasher.new(...args);\n        this.ptr = instance.ptr;\n    }\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        wasm.__wbg_sha2_512hasher_free(ptr);\n    }\n    /**\n    * @returns {Sha2_512Hasher}\n    */\n    static new() {\n        return Sha2_512Hasher.__construct(wasm.sha2_512hasher_new());\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @returns {void}\n    */\n    update(arg0) {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const [ptr0, len0] = passArray8ToWasm(arg0);\n        try {\n            return wasm.sha2_512hasher_update(this.ptr, ptr0, len0);\n            \n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n            \n        }\n        \n    }\n    /**\n    * @returns {string}\n    */\n    hex_digest() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const retptr = globalArgumentPtr();\n        wasm.sha2_512hasher_hex_digest(retptr, this.ptr);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        \n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n        \n    }\n}\n/**\n*/\nexport class Sha3_256Hasher {\n    \n    static __construct(ptr) {\n        return new Sha3_256Hasher(new ConstructorToken(ptr));\n    }\n    \n    constructor(...args) {\n        if (args.length === 1 && args[0] instanceof ConstructorToken) {\n            this.ptr = args[0].ptr;\n            return;\n        }\n        \n        // This invocation of new will call this constructor with a ConstructorToken\n        let instance = Sha3_256Hasher.new(...args);\n        this.ptr = instance.ptr;\n    }\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        wasm.__wbg_sha3_256hasher_free(ptr);\n    }\n    /**\n    * @returns {Sha3_256Hasher}\n    */\n    static new() {\n        return Sha3_256Hasher.__construct(wasm.sha3_256hasher_new());\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @returns {void}\n    */\n    update(arg0) {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const [ptr0, len0] = passArray8ToWasm(arg0);\n        try {\n            return wasm.sha3_256hasher_update(this.ptr, ptr0, len0);\n            \n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n            \n        }\n        \n    }\n    /**\n    * @returns {string}\n    */\n    hex_digest() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const retptr = globalArgumentPtr();\n        wasm.sha3_256hasher_hex_digest(retptr, this.ptr);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        \n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n        \n    }\n}\n/**\n*/\nexport class Sha2_256Hasher {\n    \n    static __construct(ptr) {\n        return new Sha2_256Hasher(new ConstructorToken(ptr));\n    }\n    \n    constructor(...args) {\n        if (args.length === 1 && args[0] instanceof ConstructorToken) {\n            this.ptr = args[0].ptr;\n            return;\n        }\n        \n        // This invocation of new will call this constructor with a ConstructorToken\n        let instance = Sha2_256Hasher.new(...args);\n        this.ptr = instance.ptr;\n    }\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        wasm.__wbg_sha2_256hasher_free(ptr);\n    }\n    /**\n    * @returns {Sha2_256Hasher}\n    */\n    static new() {\n        return Sha2_256Hasher.__construct(wasm.sha2_256hasher_new());\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @returns {void}\n    */\n    update(arg0) {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const [ptr0, len0] = passArray8ToWasm(arg0);\n        try {\n            return wasm.sha2_256hasher_update(this.ptr, ptr0, len0);\n            \n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n            \n        }\n        \n    }\n    /**\n    * @returns {string}\n    */\n    hex_digest() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const retptr = globalArgumentPtr();\n        wasm.sha2_256hasher_hex_digest(retptr, this.ptr);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        \n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n        \n    }\n}\n/**\n*/\nexport class Sha3_512Hasher {\n    \n    static __construct(ptr) {\n        return new Sha3_512Hasher(new ConstructorToken(ptr));\n    }\n    \n    constructor(...args) {\n        if (args.length === 1 && args[0] instanceof ConstructorToken) {\n            this.ptr = args[0].ptr;\n            return;\n        }\n        \n        // This invocation of new will call this constructor with a ConstructorToken\n        let instance = Sha3_512Hasher.new(...args);\n        this.ptr = instance.ptr;\n    }\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        wasm.__wbg_sha3_512hasher_free(ptr);\n    }\n    /**\n    * @returns {Sha3_512Hasher}\n    */\n    static new() {\n        return Sha3_512Hasher.__construct(wasm.sha3_512hasher_new());\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @returns {void}\n    */\n    update(arg0) {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const [ptr0, len0] = passArray8ToWasm(arg0);\n        try {\n            return wasm.sha3_512hasher_update(this.ptr, ptr0, len0);\n            \n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n            \n        }\n        \n    }\n    /**\n    * @returns {string}\n    */\n    hex_digest() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const retptr = globalArgumentPtr();\n        wasm.sha3_512hasher_hex_digest(retptr, this.ptr);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        \n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n        \n    }\n}\n/**\n*/\nexport class Sha1Hasher {\n    \n    static __construct(ptr) {\n        return new Sha1Hasher(new ConstructorToken(ptr));\n    }\n    \n    constructor(...args) {\n        if (args.length === 1 && args[0] instanceof ConstructorToken) {\n            this.ptr = args[0].ptr;\n            return;\n        }\n        \n        // This invocation of new will call this constructor with a ConstructorToken\n        let instance = Sha1Hasher.new(...args);\n        this.ptr = instance.ptr;\n    }\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        wasm.__wbg_sha1hasher_free(ptr);\n    }\n    /**\n    * @returns {Sha1Hasher}\n    */\n    static new() {\n        return Sha1Hasher.__construct(wasm.sha1hasher_new());\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @returns {void}\n    */\n    update(arg0) {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const [ptr0, len0] = passArray8ToWasm(arg0);\n        try {\n            return wasm.sha1hasher_update(this.ptr, ptr0, len0);\n            \n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n            \n        }\n        \n    }\n    /**\n    * @returns {string}\n    */\n    hex_digest() {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        const retptr = globalArgumentPtr();\n        wasm.sha1hasher_hex_digest(retptr, this.ptr);\n        const mem = getUint32Memory();\n        const ptr = mem[retptr / 4];\n        const len = mem[retptr / 4 + 1];\n        \n        const realRet = getStringFromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len * 1);\n        return realRet;\n        \n    }\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n"],"sourceRoot":""}